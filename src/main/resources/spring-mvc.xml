<?xml version="1.0" encoding="UTF-8" ?>
<!-- /src/main/resources/spring-mvc.xml -->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:websocket="http://www.springframework.org/schema/websocket"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd">
   
<mvc:default-servlet-handler /> <!-- css, js, html 웹에서 제공되는 파일의 기본 기능 제외 -->

<!-- 
http://localhost:8088/springmvc1/item/list
 => ItemController 클래스를 선택 -->
<bean class=
"org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />

<!-- controller,logic,dao 패키지를 먼저 scan 하여 @Component 를 가진 클래스의 객체 생성 -->
<context:component-scan base-package="controller,logic,dao,aop" />

<!-- annotation-driven : web 환경에서 객체 주입을 위한 설정 : 
		@Autowired, @Controller ..기능을 사용할 수 있도록 하는 것 -->
<mvc:annotation-driven />

<!-- AOP 기능 수행 -->
<aop:aspectj-autoproxy/>

<!-- 뷰결정자 : jsp 페이지의 위치 지정 -->
<bean id="viewResolver"
     class="org.springframework.web.servlet.view.InternalResourceViewResolver">
  <property name="viewClass">
     <value>org.springframework.web.servlet.view.JstlView</value>
  </property>
  
  <!-- /item/list가 들어오면 prefix : 앞에, suffix : 뒤에 붙여
  		/WEB-INF/view/item/list.jsp : 뷰 지정 
  -->
  <property name="prefix"><value>/WEB-INF/view/</value></property>
  <property name="suffix"><value>.jsp</value></property>
</bean>

<!-- 파일 업로드 설정 : enctype="multipart/form-data" 형식의 요청이 들어오면 구동  
	maxUploadSize : 100M. 최대 업로드 가능 크기
	maxInMemorySize : 10M. 10M까지는 메모리에 파일의 내용을 저장 
-->
<bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver" 
	p:maxUploadSize="104854600" 
	p:maxInMemorySize="10485460">
</bean>

<!-- message 코드 값 저장한 properties 파일 설정 : messages.properties .
	 message 처리를 위한 설정 -->
<bean id="messageSource" 
	class="org.springframework.context.support.ResourceBundleMessageSource">
	<property name="basenames">
		<list><value>messages</value></list>
	</property>
</bean>
<!-- 예외처리 -->
<bean id="exceptionHandler" 
	class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	<property name="exceptionMappings">
		<value>exception.LoginException=exception
			   exception.CartException=exception</value>
	</property>	
</bean>
</beans>